<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.goworks.work.tunnel.dao.StaffDOMapper">
  <resultMap id="BaseResultMap" type="cc.goworks.work.tunnel.model.StaffDO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="staff_id" jdbcType="VARCHAR" property="staffId" />
    <result column="work_no" jdbcType="VARCHAR" property="workNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="hr_organization_id" jdbcType="VARCHAR" property="hrOrganizationId" />
    <result column="costing_organization_id" jdbcType="VARCHAR" property="costingOrganizationId" />
    <result column="post_id" jdbcType="VARCHAR" property="postId" />
    <result column="first_employ_date" jdbcType="TIMESTAMP" property="firstEmployDate" />
    <result column="positive_date" jdbcType="TIMESTAMP" property="positiveDate" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="identity_number" jdbcType="VARCHAR" property="identityNumber" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="probation_salary" jdbcType="VARCHAR" property="probationSalary" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="salary_card" jdbcType="VARCHAR" property="salaryCard" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="active" jdbcType="TINYINT" property="active" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, staff_id, work_no, name, username, password, hr_organization_id, costing_organization_id, 
    post_id, first_employ_date, positive_date, type, identity_number, phone, birthday, 
    gender, email, probation_salary, salary, salary_card, gmt_create, gmt_modify, creator, 
    modifier, version, active, status
  </sql>
  <select id="selectByExample" parameterType="cc.goworks.work.tunnel.model.StaffDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.goworks.work.tunnel.model.StaffDOExample">
    delete from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.goworks.work.tunnel.model.StaffDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into staff (staff_id, work_no, name, 
      username, password, hr_organization_id, 
      costing_organization_id, post_id, first_employ_date, 
      positive_date, type, identity_number, 
      phone, birthday, gender, 
      email, probation_salary, salary, 
      salary_card, gmt_create, gmt_modify, 
      creator, modifier, version, 
      active, status)
    values (#{staffId,jdbcType=VARCHAR}, #{workNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{hrOrganizationId,jdbcType=VARCHAR}, 
      #{costingOrganizationId,jdbcType=VARCHAR}, #{postId,jdbcType=VARCHAR}, #{firstEmployDate,jdbcType=TIMESTAMP}, 
      #{positiveDate,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{identityNumber,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP}, #{gender,jdbcType=TINYINT}, 
      #{email,jdbcType=VARCHAR}, #{probationSalary,jdbcType=VARCHAR}, #{salary,jdbcType=VARCHAR}, 
      #{salaryCard,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, 
      #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{version,jdbcType=INTEGER}, 
      #{active,jdbcType=TINYINT}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cc.goworks.work.tunnel.model.StaffDO">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="workNo != null">
        work_no,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="hrOrganizationId != null">
        hr_organization_id,
      </if>
      <if test="costingOrganizationId != null">
        costing_organization_id,
      </if>
      <if test="postId != null">
        post_id,
      </if>
      <if test="firstEmployDate != null">
        first_employ_date,
      </if>
      <if test="positiveDate != null">
        positive_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="identityNumber != null">
        identity_number,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="probationSalary != null">
        probation_salary,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="salaryCard != null">
        salary_card,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffId != null">
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="workNo != null">
        #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="hrOrganizationId != null">
        #{hrOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="costingOrganizationId != null">
        #{costingOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        #{postId,jdbcType=VARCHAR},
      </if>
      <if test="firstEmployDate != null">
        #{firstEmployDate,jdbcType=TIMESTAMP},
      </if>
      <if test="positiveDate != null">
        #{positiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="identityNumber != null">
        #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="probationSalary != null">
        #{probationSalary,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="salaryCard != null">
        #{salaryCard,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.goworks.work.tunnel.model.StaffDOExample" resultType="java.lang.Long">
    select count(*) from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update staff
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=VARCHAR},
      </if>
      <if test="record.workNo != null">
        work_no = #{record.workNo,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.hrOrganizationId != null">
        hr_organization_id = #{record.hrOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.costingOrganizationId != null">
        costing_organization_id = #{record.costingOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=VARCHAR},
      </if>
      <if test="record.firstEmployDate != null">
        first_employ_date = #{record.firstEmployDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.positiveDate != null">
        positive_date = #{record.positiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.identityNumber != null">
        identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.probationSalary != null">
        probation_salary = #{record.probationSalary,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryCard != null">
        salary_card = #{record.salaryCard,jdbcType=VARCHAR},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null">
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update staff
    set id = #{record.id,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=VARCHAR},
      work_no = #{record.workNo,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      hr_organization_id = #{record.hrOrganizationId,jdbcType=VARCHAR},
      costing_organization_id = #{record.costingOrganizationId,jdbcType=VARCHAR},
      post_id = #{record.postId,jdbcType=VARCHAR},
      first_employ_date = #{record.firstEmployDate,jdbcType=TIMESTAMP},
      positive_date = #{record.positiveDate,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=TINYINT},
      identity_number = #{record.identityNumber,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=TINYINT},
      email = #{record.email,jdbcType=VARCHAR},
      probation_salary = #{record.probationSalary,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=VARCHAR},
      salary_card = #{record.salaryCard,jdbcType=VARCHAR},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=INTEGER},
      active = #{record.active,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.goworks.work.tunnel.model.StaffDO">
    update staff
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="workNo != null">
        work_no = #{workNo,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="hrOrganizationId != null">
        hr_organization_id = #{hrOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="costingOrganizationId != null">
        costing_organization_id = #{costingOrganizationId,jdbcType=VARCHAR},
      </if>
      <if test="postId != null">
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="firstEmployDate != null">
        first_employ_date = #{firstEmployDate,jdbcType=TIMESTAMP},
      </if>
      <if test="positiveDate != null">
        positive_date = #{positiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="identityNumber != null">
        identity_number = #{identityNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="probationSalary != null">
        probation_salary = #{probationSalary,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=VARCHAR},
      </if>
      <if test="salaryCard != null">
        salary_card = #{salaryCard,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.goworks.work.tunnel.model.StaffDO">
    update staff
    set staff_id = #{staffId,jdbcType=VARCHAR},
      work_no = #{workNo,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      hr_organization_id = #{hrOrganizationId,jdbcType=VARCHAR},
      costing_organization_id = #{costingOrganizationId,jdbcType=VARCHAR},
      post_id = #{postId,jdbcType=VARCHAR},
      first_employ_date = #{firstEmployDate,jdbcType=TIMESTAMP},
      positive_date = #{positiveDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      identity_number = #{identityNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      gender = #{gender,jdbcType=TINYINT},
      email = #{email,jdbcType=VARCHAR},
      probation_salary = #{probationSalary,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=VARCHAR},
      salary_card = #{salaryCard,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      version = #{version,jdbcType=INTEGER},
      active = #{active,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>